(function(global){var cache={},packages={},rawPackages=[];var options={defaults:{main:"main","public":false,external:false},init:initialize};var oldRequire=global.require,modulesStack=["__root__"];function require(modulePath){var parentPath=modulesStack[modulesStack.length-1];ensurePathAccessible(modulePath,parentPath);var module,modulePkg=getPackageForPath(modulePath);if(modulePkg!==false){if(modulePath===modulePkg.location){modulePath+="/"+modulePkg.main}}modulesStack.push(modulePath);try{module=oldRequire(modulePath)}finally{modulesStack.pop()}return module}require.packages=options;for(var prop in oldRequire){require[prop]=oldRequire[prop]}global.require=require;function ensurePathAccessible(modulePath,currentModulePath){var currentPkg=getPackageForPath(currentModulePath);var modulePkg=getPackageForPath(modulePath);var error=false;if(currentPkg===false){if(modulePkg!==false){if(!isPathAccessibleFromOutsidePackage(modulePath,modulePkg)){error="Access to package internal files from outside of package"}}}else{if(modulePkg===false){if(!isPathAccessibleFromInsidePackage(modulePath,currentPkg)){error="Access to out-of-package files from inside packages"}}else{if(!isPathAccessibleFromInsidePackage(modulePath,currentPkg)){error="Cross-package access"}}}if(error){error+=' is denied!\nAttempt to access "'+modulePath+'" from "'+currentModulePath+'"';throw new Error(error)}return true}var isInitialized=false;function initialize(pkgs){if(isInitialized){throw new Error("Packages list already initialized")}isInitialized=true;var pkg,rawPkg;rawPackages=pkgs;if(!rawPackages.constructor===Array){rawPackages=[rawPackages]}var i=0;while(i<rawPackages.length){rawPkg=rawPackages[i];if(typeof rawPkg==="object"&&rawPkg.constructor===Object){pkg=rawPkg}else{pkg={location:rawPkg}}defaults(pkg,options.defaults);if(typeof pkg.location==="string"){packages[pkg.location]=pkg;rawPackages.splice(i,1)}else{rawPackages[i]=pkg;++i}}return true}function isMatches(str,pattern){if(!pattern){return false}if(typeof pattern==="string"){return str===pattern}else if(pattern.constructor===RegExp){return pattern.test(str)}else if(typeof pattern==="function"){return pattern(str)}else if(pattern.constructor===Array){for(var i=0;i<pattern.length;i++){if(isMatches(str,pattern[i])){return true}}return false}else{throw new Error("Pattern should be either string, regexp, or function")}}function isPathInPackage(modulePath,pkg){if(modulePath in cache){return cache[modulePath]!==false}var result;if(!pkg){pkg=getPackageForPath(modulePath);result=pkg!==false}else{result=modulePath.indexOf(pkg.location)===0}cache[modulePath]=result?pkg.location:false;return result}function getPackageForPath(modulePath){if(modulePath in cache){return cache[modulePath]!==false?packages[cache[modulePath]]:false}for(var pkgPath in packages){var pkg=packages[pkgPath];if(isPathInPackage(modulePath,pkg)){return pkg}}for(var i=0;i<rawPackages.length;i++){var rawPkg=rawPackages[i];if(parseModulePathForPackages(modulePath,rawPkg)){return getPackageForPath(modulePath)}}return false}function parseModulePathForPackages(modulePath,rawPkg){var parts=modulePath.split("/"),testPath="",newPkg,foundPackages=0;for(var i=0;i<parts.length;i++){if(i>0){testPath+="/"}testPath+=parts[i];if(isMatches(testPath,rawPkg.location)){newPkg=deepClone(rawPkg);newPkg.location=testPath;packages[testPath]=newPkg;cache[modulePath]=newPkg.location;++foundPackages}}return foundPackages>0}function isPathAccessibleFromInsidePackage(modulePath,pkg){var modulePkg=getPackageForPath(modulePath);if(modulePkg===false){return isMatches(modulePath,pkg.external)}else if(modulePkg===pkg){return true}return false}function isPathAccessibleFromOutsidePackage(modulePath,pkg){var modulePkg=getPackageForPath(modulePath);if(modulePkg===pkg){return modulePath===pkg.location||modulePath===pkg.location+"/"+pkg.main||isMatches(modulePath.slice(pkg.location.length+1),pkg.public)}return true}function deepClone(obj){var clone={};for(var prop in obj)if(obj.hasOwnProperty(prop)){var val=obj[prop];if(val.constructor===Array){clone[prop]=val.slice()}else if(typeof val==="object"&&val.constructor===Object){clone[prop]=deepClone(val)}else{clone[prop]=val}}return clone}function defaults(dest,src){for(var key in src)if(src.hasOwnProperty(key)&&!dest.hasOwnProperty(key)){dest[key]=src[key]}}})(window);